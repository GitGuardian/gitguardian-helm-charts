{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "TimescaleDB Helm Chart Values Schema",
  "description": "Schema for TimescaleDB Helm chart values",
  "properties": {
    "global": {
      "type": "object",
      "title": "Global Parameters",
      "description": "Global Docker image parameters",
      "properties": {
        "imageRegistry": {
          "type": "string",
          "title": "Global Docker Image Registry",
          "description": "Global Docker Image registry"
        },
        "imagePullSecrets": {
          "type": "array",
          "title": "Global Image Pull Secrets",
          "description": "Global Docker registry secret names as an array of objects",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "title": "Secret Name",
                "description": "Name of the image pull secret"
              }
            },
            "required": ["name"]
          }
        }
      }
    },
    "image": {
      "type": "object",
      "title": "TimescaleDB Image Configuration",
      "description": "TimescaleDB container image configuration",
      "properties": {
        "registry": {
          "type": "string",
          "title": "TimescaleDB Image Registry",
          "description": "TimescaleDB image registry"
        },
        "repository": {
          "type": "string",
          "title": "TimescaleDB Image Repository",
          "description": "TimescaleDB image repository"
        },
        "tag": {
          "type": "string",
          "title": "TimescaleDB Image Tag",
          "description": "TimescaleDB image tag with digest"
        },
        "imagePullPolicy": {
          "type": "string",
          "title": "TimescaleDB Image Pull Policy",
          "description": "TimescaleDB image pull policy",
          "enum": ["Always", "Never", "IfNotPresent"]
        }
      }
    },
    "replicaCount": {
      "type": "integer",
      "title": "Replica Count",
      "description": "Number of TimescaleDB replicas to deploy (Note: TimescaleDB doesn't support multi-master replication by default)",
      "minimum": 1
    },
    "nameOverride": {
      "type": "string",
      "title": "Name Override",
      "description": "String to partially override timescaledb.fullname"
    },
    "fullnameOverride": {
      "type": "string",
      "title": "Full Name Override",
      "description": "String to fully override timescaledb.fullname"
    },
    "commonLabels": {
      "type": "object",
      "title": "Common Labels",
      "description": "Labels to add to all deployed objects",
      "additionalProperties": {
        "type": "string"
      }
    },
    "commonAnnotations": {
      "type": "object",
      "title": "Common Annotations",
      "description": "Annotations to add to all deployed objects",
      "additionalProperties": {
        "type": "string"
      }
    },
    "podSecurityContext": {
      "type": "object",
      "title": "Pod Security Context",
      "description": "Security Context configuration",
      "properties": {
        "fsGroup": {
          "type": "integer",
          "title": "FS Group",
          "description": "Group ID for the volumes of the pod",
          "minimum": 0
        }
      }
    },
    "containerSecurityContext": {
      "type": "object",
      "title": "Security Context",
      "description": "Container security context",
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "title": "Allow Privilege Escalation",
          "description": "Enable container privilege escalation"
        },
        "runAsNonRoot": {
          "type": "boolean",
          "title": "Run As Non-Root",
          "description": "Configure the container to run as a non-root user"
        },
        "runAsUser": {
          "type": "integer",
          "title": "Run As User",
          "description": "User ID for the TimescaleDB container",
          "minimum": 0
        },
        "runAsGroup": {
          "type": "integer",
          "title": "Run As Group",
          "description": "Group ID for the TimescaleDB container",
          "minimum": 0
        },
        "readOnlyRootFilesystem": {
          "type": "boolean",
          "title": "Read-Only Root Filesystem",
          "description": "Mount container root filesystem as read-only"
        },
        "capabilities": {
          "type": "object",
          "title": "Capabilities",
          "description": "Linux capabilities configuration",
          "properties": {
            "drop": {
              "type": "array",
              "title": "Drop Capabilities",
              "description": "Linux capabilities to be dropped",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "auth": {
      "type": "object",
      "title": "TimescaleDB Authentication",
      "description": "TimescaleDB Authentication configuration",
      "properties": {
        "postgresPassword": {
          "type": "string",
          "title": "Postgres Password",
          "description": "Password for the postgres admin user. If not set, a random password will be generated"
        },
        "existingSecret": {
          "type": "string",
          "title": "Existing Secret",
          "description": "Name of existing secret to use for TimescaleDB credentials"
        },
        "secretKeys": {
          "type": "object",
          "title": "Secret Keys",
          "description": "Keys in existing secret",
          "properties": {
            "adminPasswordKey": {
              "type": "string",
              "title": "Admin Password Key",
              "description": "Name of key in existing secret to use for TimescaleDB credentials"
            }
          }
        }
      }
    },
    "config": {
      "type": "object",
      "title": "TimescaleDB Configuration",
      "description": "TimescaleDB Configuration parameters",
      "properties": {
        "postgresqlSharedPreloadLibraries": {
          "type": "string",
          "title": "Shared Preload Libraries",
          "description": "Shared preload libraries (comma-separated list)"
        },
        "postgresqlMaxConnections": {
          "type": "integer",
          "title": "Max Connections",
          "description": "Maximum number of connections",
          "minimum": 1
        },
        "postgresqlSharedBuffers": {
          "type": "string",
          "title": "Shared Buffers",
          "description": "Amount of memory the database server uses for shared memory buffers"
        },
        "postgresqlEffectiveCacheSize": {
          "type": "string",
          "title": "Effective Cache Size",
          "description": "Effective cache size"
        },
        "postgresqlWorkMem": {
          "type": "string",
          "title": "Work Memory",
          "description": "Amount of memory to be used by internal sort operations and hash tables"
        },
        "postgresqlMaintenanceWorkMem": {
          "type": "string",
          "title": "Maintenance Work Memory",
          "description": "Maximum amount of memory to be used by maintenance operations"
        },
        "postgresqlWalBuffers": {
          "type": "string",
          "title": "WAL Buffers",
          "description": "Amount of memory used in shared memory for WAL data"
        },
        "postgresqlCheckpointCompletionTarget": {
          "type": "string",
          "title": "Checkpoint Completion Target",
          "description": "Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval"
        },
        "postgresqlRandomPageCost": {
          "type": "string",
          "title": "Random Page Cost",
          "description": "Sets the planner's estimate of the cost of a non-sequentially-fetched disk page"
        },
        "postgresqlLogStatement": {
          "type": "string",
          "title": "Log Statement",
          "description": "Sets the type of statements logged"
        },
        "postgresqlLogMinDurationStatement": {
          "type": "string",
          "title": "Log Min Duration Statement",
          "description": "Sets the minimum execution time above which statements will be logged"
        },
        "extraConfig": {
          "type": "array",
          "title": "Extra Configuration",
          "description": "Additional PostgreSQL configuration parameters",
          "items": {
            "type": "string"
          }
        },
        "timescaledbTelemetry": {
          "type": "string",
          "title": "TimescaleDB Telemetry",
          "description": "Enable/disable TimescaleDB telemetry",
          "enum": ["on", "off"]
        },
        "timescaledbMaxBackgroundWorkers": {
          "type": "integer",
          "title": "TimescaleDB Max Background Workers",
          "description": "Maximum number of TimescaleDB background workers",
          "minimum": 1
        },
        "existingConfigmap": {
          "type": "string",
          "title": "Existing ConfigMap",
          "description": "Name of existing ConfigMap with TimescaleDB configuration"
        }
      }
    },
    "service": {
      "type": "object",
      "title": "Service Configuration",
      "description": "Service configuration parameters",
      "properties": {
        "type": {
          "type": "string",
          "title": "Service Type",
          "description": "TimescaleDB service type",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"]
        },
        "port": {
          "type": "integer",
          "title": "Service Port",
          "description": "TimescaleDB service port",
          "minimum": 1,
          "maximum": 65535
        },
        "targetPort": {
          "type": "integer",
          "title": "Target Port",
          "description": "TimescaleDB container port",
          "minimum": 1,
          "maximum": 65535
        },
        "annotations": {
          "type": "object",
          "title": "Service Annotations",
          "description": "Service annotations",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "resources": {
      "type": "object",
      "title": "Resource Configuration",
      "description": "Resource configuration parameters",
      "properties": {
        "limits": {
          "type": "object",
          "title": "Resource Limits",
          "description": "Resource limits for the container",
          "properties": {
            "cpu": {
              "oneOf": [
                {"type": "string"},
                {"type": "number"}
              ],
              "title": "CPU Limit",
              "description": "CPU resource limit"
            },
            "memory": {
              "type": "string",
              "title": "Memory Limit",
              "description": "Memory resource limit"
            }
          }
        },
        "requests": {
          "type": "object",
          "title": "Resource Requests",
          "description": "Resource requests for the container",
          "properties": {
            "cpu": {
              "oneOf": [
                {"type": "string"},
                {"type": "number"}
              ],
              "title": "CPU Request",
              "description": "CPU resource request"
            },
            "memory": {
              "type": "string",
              "title": "Memory Request",
              "description": "Memory resource request"
            }
          }
        }
      }
    },
    "persistence": {
      "type": "object",
      "title": "Persistence Configuration",
      "description": "Persistence configuration parameters",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Persistence",
          "description": "Enable persistence using Persistent Volume Claims"
        },
        "storageClass": {
          "type": "string",
          "title": "Storage Class",
          "description": "Persistent Volume storage class"
        },
        "annotations": {
          "type": "object",
          "title": "PVC Annotations",
          "description": "Persistent Volume Claim annotations",
          "additionalProperties": {
            "type": "string"
          }
        },
        "size": {
          "type": "string",
          "title": "Storage Size",
          "description": "Persistent Volume size",
          "pattern": "^\\d+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$"
        },
        "accessModes": {
          "type": "array",
          "title": "Access Modes",
          "description": "Persistent Volume access modes",
          "items": {
            "type": "string",
            "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany", "ReadWriteOncePod"]
          }
        },
        "existingClaim": {
          "type": "string",
          "title": "Existing Claim",
          "description": "The name of an existing PVC to use for persistence"
        }
      }
    },
    "livenessProbe": {
      "type": "object",
      "title": "Liveness Probe Configuration",
      "description": "Liveness and readiness probes configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Liveness Probe",
          "description": "Enable livenessProbe on TimescaleDB containers"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "title": "Initial Delay Seconds",
          "description": "Initial delay seconds for livenessProbe",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "title": "Period Seconds",
          "description": "Period seconds for livenessProbe",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "title": "Timeout Seconds",
          "description": "Timeout seconds for livenessProbe",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "title": "Failure Threshold",
          "description": "Failure threshold for livenessProbe",
          "minimum": 1
        },
        "successThreshold": {
          "type": "integer",
          "title": "Success Threshold",
          "description": "Success threshold for livenessProbe",
          "minimum": 1
        }
      }
    },
    "readinessProbe": {
      "type": "object",
      "title": "Readiness Probe Configuration",
      "description": "Readiness probe configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Readiness Probe",
          "description": "Enable readinessProbe on TimescaleDB containers"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "title": "Initial Delay Seconds",
          "description": "Initial delay seconds for readinessProbe",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "title": "Period Seconds",
          "description": "Period seconds for readinessProbe",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "title": "Timeout Seconds",
          "description": "Timeout seconds for readinessProbe",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "title": "Failure Threshold",
          "description": "Failure threshold for readinessProbe",
          "minimum": 1
        },
        "successThreshold": {
          "type": "integer",
          "title": "Success Threshold",
          "description": "Success threshold for readinessProbe",
          "minimum": 1
        }
      }
    },
    "startupProbe": {
      "type": "object",
      "title": "Startup Probe Configuration",
      "description": "Startup probe configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enable Startup Probe",
          "description": "Enable startupProbe on TimescaleDB containers"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "title": "Initial Delay Seconds",
          "description": "Initial delay seconds for startupProbe",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "title": "Period Seconds",
          "description": "Period seconds for startupProbe",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "title": "Timeout Seconds",
          "description": "Timeout seconds for startupProbe",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "title": "Failure Threshold",
          "description": "Failure threshold for startupProbe",
          "minimum": 1
        },
        "successThreshold": {
          "type": "integer",
          "title": "Success Threshold",
          "description": "Success threshold for startupProbe",
          "minimum": 1
        }
      }
    },
    "nodeSelector": {
      "type": "object",
      "title": "Node Selector",
      "description": "Node labels for pod assignment",
      "additionalProperties": {
        "type": "string"
      }
    },
    "tolerations": {
      "type": "array",
      "title": "Tolerations",
      "description": "Toleration labels for pod assignment",
      "items": {
        "type": "object"
      }
    },
    "affinity": {
      "type": "object",
      "title": "Affinity Configuration",
      "description": "Affinity settings for pod assignment"
    },
    "extraObjects": {
      "type": "array",
      "title": "Extra Objects",
      "description": "A list of additional Kubernetes objects to deploy alongside the release. Helm templating is supported in any field, but all template expressions must be quoted. Each item should be a valid Kubernetes manifest object.",
      "items": {
        "type": "object",
        "description": "A Kubernetes manifest object. All fields are allowed."
      }
    }
  }
}