{{- if .Values.defaultBuckets }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "minio.fullname" . }}-post-job
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "minio.annotations" . | nindent 4 }}
    {{- end }}
spec:
  ttlSecondsAfterFinished: 600
  activeDeadlineSeconds: 300
  completions: 1
  parallelism: 1
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "minio.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: post-job
    spec:
{{- with (include "minio.imagePullSecrets" .) }}
{{ . | nindent 6 }}
{{- end }}
      restartPolicy: OnFailure
      securityContext: {{ include "common.renderPodSecurityContext" . | nindent 8 }}
      containers:
        - name: post-job
          image: {{ include "minio.image" . }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "/scripts/provision-buckets.sh"]
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "minio.secretName" . }}
                  key: {{ include "minio.rootUser" . }}
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "minio.secretName" . }}
                  key: {{ include "minio.rootPasswordKey" . }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: tmp
              mountPath: /tmp
          securityContext:
            {{- $securityContext := include "common.renderContainerSecurityContext" . | fromYaml }}
            {{- $_ := set $securityContext "readOnlyRootFilesystem" false }}
            {{- toYaml $securityContext | nindent 12 }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "minio.fullname" . }}-post-job
            defaultMode: 0755
        - name: tmp
          emptyDir: {}
{{- end }}
