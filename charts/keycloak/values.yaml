## @section Global parameters
global:
  ## @param global.imageRegistry Global Docker Image registry
  imageRegistry: ""
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  imagePullSecrets: []

## @section Common parameters
## @param nameOverride String to partially override keycloak.fullname
nameOverride: ""
## @param fullnameOverride String to fully override keycloak.fullname
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
commonAnnotations: {}

## @section Keycloak image configuration
image:
  ## @param image.registry Keycloak image registry
  registry: docker.io
  ## @param image.repository Keycloak image repository
  repository: keycloak/keycloak
  ## @param image.tag Keycloak image tag (immutable tags are recommended)
  tag: "26.4.0@sha256:5f3fb534cde6bf006d79f5912473e5d2c828c707cdfc52e16972803aca9d43dd"
  ## @param image.imagePullPolicy Keycloak image pull policy
  imagePullPolicy: Always
  ## @param image.command Keycloak container command
  command: "/opt/keycloak/bin/kc.sh"

## @section Deployment configuration
## @param replicaCount Number of Keycloak replicas to deploy
replicaCount: 1

## @section Pod annotations and labels
## @param podAnnotations Map of annotations to add to the pods
podAnnotations: {}
## @param podLabels Map of labels to add to the pods
podLabels: {}

## @section extra volumes and volumes mount
## @param extraVolumes Optionally specify extra list of additional volumes for Keycloak pod
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Keycloak container
extraVolumeMounts: []

## @section Extra init containers for Keycloak pod
## @param Optionnaly specify an extra list of initContainer for the Keycloak pod
## Example:
## initContainers:
##   - name: <container-name>
##     image: <your-image>
##     imagePullPolicy: Always
##
extraInitContainers: []

## @section Security Context
podSecurityContext:
  ## @param podSecurityContext.fsGroup Group ID for the volumes of the pod
  fsGroup: 1001

containerSecurityContext:
  ## @param containerSecurityContext.allowPrivilegeEscalation Enable container privilege escalation
  allowPrivilegeEscalation: false
  ## @param containerSecurityContext.runAsNonRoot Configure the container to run as a non-root user
  runAsNonRoot: true
  ## @param containerSecurityContext.runAsUser User ID for the Keycloak container
  runAsUser: 1001
  ## @param containerSecurityContext.runAsGroup Group ID for the Keycloak container
  runAsGroup: 1001
  ## @param containerSecurityContext.readOnlyRootFilesystem Mount container root filesystem as read-only
  readOnlyRootFilesystem: false
  ## @param containerSecurityContext.capabilities.drop Linux capabilities to be dropped
  capabilities:
    drop:
      - ALL

## @section Keycloak Configuration
keycloak:
  ## @param keycloak.adminUser Keycloak admin username
  adminUser: admin
  ## @param keycloak.adminPassword Keycloak admin password
  adminPassword: ""
  ## @param keycloak.existingSecret Name of existing secret to use for Keycloak admin credentials
  existingSecret: ""
  ## @param keycloak.secretKeys Secret keys for admin credentials
  secretKeys:
    adminPasswordKey: "admin-password"
  ## @param keycloak.hostname Keycloak hostname
  hostname: ""
  ## @param keycloak.hostnameAdmin Keycloak admin hostname
  hostnameAdmin: ""
  ## @param keycloak.hostnameStrict Enable strict hostname resolution
  hostnameStrict: false
  ## @param keycloak.hostnameBackchannel Keycloak backchannel hostname
  hostnameBackchannel: ""
  ## @param keycloak.httpEnabled Enable HTTP listener
  httpEnabled: true
  ## @param keycloak.httpPort HTTP port
  httpPort: 8080
  ## @param keycloak.httpsPort HTTPS port
  httpsPort: 8443
  ## @param keycloak.proxyHeaders The proxy headers that should be accepted by the server. (forwarded, xforwarded)
  proxyHeaders: ""
  ## @param keycloak.proxyProtocolEnabled  Whether the server should use the HA PROXY protocol when serving requests from behind a proxy. (true, false(default))
  proxyProtocolEnabled: false
  ## @param keycloak.proxyTrustedAddresses A comma separated list of trusted proxy addresses
  proxyTrustedAddresses: ""
  ## @param keycloak.production Enable production mode
  production: false
  ## @param keycloak.httpRelativePath Set relative path for serving resources; must start with a /
  httpRelativePath: /

## @section Database Configuration
database:
  ## @param database.type Database type (postgres, mysql, mariadb)
  ## Note: H2 databases (h2-file, h2-mem) are not supported due to readonly filesystem restrictions
  ## Use embedded postgres or mariadb instead
  type: postgres
  ## @param database.host Database host (only used when not using embedded database)
  host: ""
  ## @param database.port Database port (only used when not using embedded database, defaults: postgres=5432, mysql/mariadb=3306)
  port: ""
  ## @param database.name Database name (only used when not using embedded database)
  name: keycloak
  ## @param database.username Database username (only used when not using embedded database)
  username: keycloak
  ## @param database.password Database password (only used when not using embedded database)
  password: ""
  ## @param database.existingSecret Name of existing secret for database credentials (only used when not using embedded database)
  existingSecret: ""
  ## @param database.secretKeys Secret keys for database credentials (only used when not using embedded database)
  secretKeys:
    passwordKey: "db-password"
    usernameKey: "db-username"
  ## @param database.jdbcParams Additional JDBC parameters
  jdbcParams: ""

## @section Cache Configuration
cache:
  ## @param cache.stack Cache stack (local, ispn, default)
  stack: local
  ## @param cache.configFile Custom cache configuration file
  configFile: ""

## @section Realm Configuration
realm:
  ## @param realm.import Enable import of realms from /opt/keycloak/data/import (production mode must be false)
  import: false
  ## @param realm.configFile Json config for initial realm configuration, mounted in /opt/keycloak/data/import
  configFile: ""

## @section Features Configuration
features:
  ## @param features.enabled List of enabled features
  enabled: []
  ## @param features.disabled List of disabled features
  disabled: []

## @section Service configuration
service:
  ## @param service.type Keycloak service type
  type: ClusterIP
  ## @param service.httpPort Keycloak HTTP service port
  httpPort: 8080
  ## @param service.httpsPort Keycloak HTTPS service port
  httpsPort: 8443
  ## @param service.httpTargetPort Keycloak HTTP container port
  httpTargetPort: 8080
  ## @param service.httpsTargetPort Keycloak HTTPS container port
  httpsTargetPort: 8443
  ## @param service.annotations Service annotations
  annotations: {}
  ## @param service.trafficDistribution Traffic distribution preference for the keycloak service. If the field is not set, the implementation will apply its default routing strategy.
  trafficDistribution: ""

## @section Ingress configuration
ingress:
  ## @param ingress.enabled Enable ingress record generation for Keycloak
  enabled: false
  ## @param ingress.className IngressClass that will be used to implement the Ingress
  className: ""
  ## @param ingress.annotations Additional annotations for the Ingress resource
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  ## @param ingress.hosts[0].host Hostname for Keycloak ingress
  ## @param ingress.hosts[0].paths[0].path Path for Keycloak ingress
  ## @param ingress.hosts[0].paths[0].pathType Path type for Keycloak ingress
  hosts:
    - host: keycloak.local
      paths:
        - path: /
          pathType: Prefix
  ## @param ingress.tls TLS configuration for Keycloak ingress
  tls: []
  #  - secretName: keycloak-tls
  #    hosts:
  #      - keycloak.local

## @section Resources
resources:
  {}
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 250m
  #   memory: 256Mi

## @section Persistence
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  enabled: false
  ## @param persistence.storageClass Persistent Volume storage class
  storageClass: ""
  ## @param persistence.annotations Persistent Volume Claim annotations
  annotations: {}
  ## @param persistence.size Persistent Volume size
  size: 1Gi
  ## @param persistence.accessModes Persistent Volume access modes
  accessModes:
    - ReadWriteOnce
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  existingClaim: ""

## @section Liveness and readiness probes
livenessProbe:
  ## @param livenessProbe.enabled Enable livenessProbe on Keycloak containers
  enabled: true
  ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  initialDelaySeconds: 60
  ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
  periodSeconds: 30
  ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  timeoutSeconds: 5
  ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
  failureThreshold: 3
  ## @param livenessProbe.successThreshold Success threshold for livenessProbe
  successThreshold: 1

readinessProbe:
  ## @param readinessProbe.enabled Enable readinessProbe on Keycloak containers
  enabled: true
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  initialDelaySeconds: 30
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  periodSeconds: 10
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  timeoutSeconds: 5
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  failureThreshold: 3
  ## @param readinessProbe.successThreshold Success threshold for readinessProbe
  successThreshold: 1

startupProbe:
  ## @param startupProbe.enabled Enable startupProbe on Keycloak containers
  enabled: true
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  initialDelaySeconds: 30
  ## @param startupProbe.periodSeconds Period seconds for startupProbe
  periodSeconds: 10
  ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
  timeoutSeconds: 5
  ## @param startupProbe.failureThreshold Failure threshold for startupProbe
  failureThreshold: 60
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  successThreshold: 1

## @section Node Selection
## @param nodeSelector Node labels for pod assignment
nodeSelector: {}

## @param tolerations Toleration labels for pod assignment
tolerations: []

## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
topologySpreadConstraints: []

## @param affinity Affinity settings for pod assignment
affinity: {}

## @section Service Account
serviceAccount:
  ## @param serviceAccount.create Specifies whether a service account should be created
  create: false
  ## @param serviceAccount.annotations Annotations to add to the service account
  annotations: {}
  ## @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated using the `fullname` template.
  name: ""
  ## @param serviceAccount.automountServiceAccountToken whether to automount the SA token inside the pod
  automountServiceAccountToken: false

## @param extraEnv Additional environment variables from key-value pairs
extraEnv: {}
# VARNAME1: value1
# VARNAME2: value2

## @param extraEnvVarsSecret Name of a secret containing additional environment variables
extraEnvVarsSecret: ""

## @param extraObjects Array of extra objects to deploy with the release
extraObjects: []

## @section Init Container Configuration
initContainers:
  ## @param initContainers.waitForPostgres.image PostgreSQL init container image for waiting
  waitForPostgres:
    image: "postgres:17.6@sha256:e6a4209d1a4893f2df3bdcde58f8926c3c929c4d51df90990ed1b36d83c1382a"
  ## @param initContainers.waitForMariadb.image MariaDB init container image for waiting
  waitForMariadb:
    image: "mariadb:12.0.2@sha256:03a03a6817bb9eaa21e5aed1b734d432ec3f80021f5a2de1795475f158217545"

## @section PostgreSQL Configuration (when postgres.enabled=true)
## @descriptionStart
## PostgreSQL configuration for embedded database
## @descriptionEnd
postgres:
  ## @param postgres.enabled Enable embedded PostgreSQL database
  enabled: true
  ## @param postgres.auth.database PostgreSQL database name
  ## @param postgres.auth.username PostgreSQL database user (leave empty for default 'postgres')
  ## @param postgres.auth.password PostgreSQL database password
  auth:
    database: "keycloak"
    username: ""
    password: ""

## @section MariaDB Configuration (when mariadb.enabled=true)
## @descriptionStart
## MariaDB configuration for embedded database
## @descriptionEnd
mariadb:
  ## @param mariadb.enabled Enable embedded MariaDB database (set to false when using postgres)
  enabled: false
  ## @param mariadb.auth.database MariaDB database name
  ## @param mariadb.auth.username MariaDB database user (leave empty for root user)
  ## @param mariadb.auth.password MariaDB database password
  ## @param mariadb.auth.rootPassword MariaDB root password
  auth:
    database: "keycloak"
    username: ""
    password: ""
    rootPassword: ""
