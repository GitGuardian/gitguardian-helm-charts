# Production-like Redis deployment with high availability
architecture: replication

# Deploy 3 Redis instances total (Sentinel manages master/replica roles dynamically)
replicaCount: 3

# Enable Sentinel for automatic failover
sentinel:
  enabled: true
  # Require 2 out of 3 Sentinels to agree on master failure
  quorum: 2
  # Detect master failure after 10 seconds (faster than default)
  downAfterMilliseconds: 10000
  # Failover timeout of 1 minute
  failoverTimeout: 60000
  # Only reconfigure 1 replica at a time during failover
  parallelSyncs: 1
  
  # Production resource requirements for Sentinels
  resources:
    limits:
      memory: 256Mi
      cpu: 200m
    requests:
      cpu: 50m
      memory: 128Mi

# Authentication enabled (production requirement)
auth:
  enabled: true

# Persistence with larger storage
persistence:
  enabled: true
  size: 20Gi
  storageClass: ""

# Production resource requirements for Redis instances
resources:
  limits:
    memory: 1Gi
    cpu: 500m
  requests:
    cpu: 100m
    memory: 512Mi

# Anti-affinity to spread pods across different nodes
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - redis
        topologyKey: kubernetes.io/hostname

# Tolerations for dedicated Redis nodes (if any)
tolerations: []

# Node selector for Redis workloads (optional)
nodeSelector: {}

# Security context
containerSecurityContext:
  runAsUser: 999
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false

podSecurityContext:
  fsGroup: 999
  runAsNonRoot: true
  runAsUser: 999

# Monitoring and health checks optimized for production
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Redis configuration optimized for production
config:
  content: |
    # Redis production configuration
    bind * -::*
    port 6379
    
    # Memory management
    maxmemory 800mb
    maxmemory-policy allkeys-lru
    
    # Persistence settings
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    
    # Performance tuning
    tcp-keepalive 300
    timeout 0